version: '3.8'

services:
  prediction:
    build:
      context: .
      dockerfile: docker/prediction/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./models:/app/models
      - ./features:/app/features
      - ./metrics:/app/metrics
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=eu-west-1
      - S3_BUCKET=ecommerce-ml-pipeline-data
      - FEATURE_UPDATE_INTERVAL=3600
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - ml-network

  prometheus:
    build:
      context: .
      dockerfile: docker/monitoring/Dockerfile
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
    depends_on:
      - prediction
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - ml-network

  grafana:
    image: grafana/grafana:10.3.3
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - ml-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  ml-network:
    driver: bridge
