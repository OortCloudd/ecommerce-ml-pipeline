name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: eu-west-1
  EKS_CLUSTER: ecommerce-ml-cluster
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docker/requirements/base.txt
          pip install pytest pytest-cov
          
      - name: Run tests
        run: |
          pytest tests/ --cov=src --cov-report=xml
          
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [prediction, monitoring, airflow]
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/${{ matrix.service }}/Dockerfile
          push: true
          tags: |
            ${{ env.ECR_REGISTRY }}/ecommerce-${{ matrix.service }}:${{ github.sha }}
            ${{ env.ECR_REGISTRY }}/ecommerce-${{ matrix.service }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}
        
      - name: Deploy to EKS
        run: |
          # Update image tags in manifests
          for service in prediction monitoring airflow; do
            sed -i "s|ecommerce-${service}:latest|ecommerce-${service}:${GITHUB_SHA}|g" infrastructure/k8s/${service}-service.yaml
            kubectl apply -f infrastructure/k8s/${service}-service.yaml
          done
          
      - name: Verify deployment
        run: |
          kubectl wait --for=condition=available --timeout=300s deployment/prediction-service
          kubectl wait --for=condition=available --timeout=300s deployment/monitoring-service
          kubectl wait --for=condition=available --timeout=300s deployment/airflow-webserver
